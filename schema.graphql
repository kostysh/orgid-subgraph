# An address
type OrganizationAddress @entity {
  id: ID!
  country: String
  subdivision: String
  locality: String
  postalCode: String
  streetAddress: String
  premise: String
}

# The type of public keys
enum PublicKeyType {
  secp256k1
}

# A public Key
type PublicKey @entity {
  id: ID!
  type: PublicKeyType!
  pem: String!
  controller: String
  note: String
}

# Define the Legal Entity type
type LegalEntity @entity {
  id: ID!
  legalName: String
  legalType: String
  legalIdentifier: String
  registeredAddress: OrganizationAddress
  logoUri: String
  organization: Organization
}

# Define the Organizational Unit type
type OrganizationalUnit @entity {
  id: ID!
  name: String
  description: String
  longDescription: String
  type: [String!]
  address: OrganizationAddress
  logoUri: String
  organization: Organization
  publicKey: [PublicKey!]
}

enum OrganizationType {
  LegalEntity
  OrganizationalUnit
}

# Define an Organization
type Organization @entity {
  # ORGiD value
  id: ID!

  # Mirrored from Smart-contract
  owner: Bytes! # address
  isActive: Boolean
  director: Bytes # address
  orgJsonHash: Bytes
  ipfsCid: String

  # Mapping with other Organizations
  units: [Organization!]
  parent: Organization

  # From offchain data
  organizationType: OrganizationType!
  legalEntity: LegalEntity
  organizationalUnit: OrganizationalUnit

  # Creation stats
  createdAtTimestamp: BigInt!
  createdAtBlockNumber: BigInt!
}
