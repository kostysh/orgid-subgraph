# GPS Coordinates
type Point @entity {
  "ID is set to the ORGiD value"
  id: ID!
  "GPS Latitude"
  latitude: BigDecimal
  "GPS Longitude"
  longitude: BigDecimal
}

# An address
type OrganizationAddress @entity {
  "ID is set to the ORGiD value"
  id: ID!
  "2-letters code of the country as per ISO standard"
  country: String
  "Country subdivision such as state or region"
  subdivision: String
  "Locality or City name"
  locality: String
  "Postal or Zip Code"
  postalCode: String
  "Street Address"
  streetAddress: String
  "Name or number of the premise"
  premise: String
  "GPS Coordinates of the location"
  gps: Point
}

# The type of public keys
enum PublicKeyType {
  Unknown
  secp256k1
  X25519
  ETH
}

# A public Key
type PublicKey @entity {
  id: ID!
  type: PublicKeyType!
  publicKeyPem: String!
  controller: String
  note: String
}

# An API Service
type Service @entity {
  "ID of the service as per W3C DID"
  id: ID!
  "Service Endpoint or Base URL for the service requests"
  serviceEndpoint: String!
  "Type of service"
  type: String
  "Version of service"
  version: String
  "Description of the service"
  description: String
  "URL for documentation of the API"
  docs: String
}

# Define the Legal Entity type
type LegalEntity @entity {
  "ID is set to the W3C DID value"
  id: ID!
  "Legal name of the entity"
  legalName: String
  "Legal type of the entity"
  legalType: String
  "Legal identifier in the national business registry of the entity"
  legalIdentifier: String
  "Legal address of the entity"
  registeredAddress: OrganizationAddress
  "Associated Organization entity"
  organization: Organization
}

# Define the Organizational Unit type
type OrganizationalUnit @entity {
  "ID is set to the W3C DID value"
  id: ID!
  "Name of the entity"
  name: String
  "Description of the entity"
  description: String
  "Longer description of the entity"
  longDescription: String
  "Types of this entity (informative)"
  type: [String!]
  "Address of the entity"
  address: OrganizationAddress
  "Associated Organization entity"
  organization: Organization
}

enum OrganizationType {
  Unknown
  LegalEntity
  OrganizationalUnit
}

# Define an Organization
type Organization @entity {
  # ORGiD value
  "ID is set to the ORGiD value"
  id: ID!
  "did is set to the W3C DID value"
  did: String

  # Mirrored from Smart-contract
  "Ethereum address of the owner of the organization"
  owner: Bytes! # address
  "Active status of the entity"
  isActive: Boolean
  "Ethereum address of the director of the organization"
  director: Bytes # address
  "keccak-256 hash of the associated JSON file"
  orgJsonHash: Bytes
  "IPFS CID of the JSON file"
  ipfsCid: String

  # Mapping with other Organizations
  "Sub-units of this organization"
  units: [Organization!]
  "Parent organization"
  parent: Organization

  # From offchain data
  "Type of organization (LegalEntity or OrganizationalUnit)"
  organizationType: OrganizationType!
  "Associated Legal Entity object for Legal Entities (null otherwise)"
  legalEntity: LegalEntity
  "Associated OrganizationalUnit object for Organizational Units  (null otherwise)"
  organizationalUnit: OrganizationalUnit
  "Array of Public Keys associated with the Organization"
  publicKey: [PublicKey!]
  "Array of Services associated with the Organization"
  service: [Service!]

  # Creation stats
  "Timestamp of the Organization Creation"
  createdAtTimestamp: BigInt!
  "Block number when the organization was created"
  createdAtBlockNumber: BigInt!
}

type Directory @entity {
  "ID is set to the directory contract address"
  id: ID!
  "Name of the directory"
  name: String!
  "List of Organizations in this directory"
  organizations: [Organization!]
  "Indicates if the directory has been archived"
  isRemoved: Boolean!

  # Creation stats
  "Timestamp of the directory addition in official index"
  addedAtTimestamp: BigInt!
  "Block number when the directory was added in the official index"
  addedAtBlockNumber: BigInt!

  # Removal stats
  "Timestamp of the directory removal from the official index"
  removedAtTimestamp: BigInt
  "Block number when the directory was removed from the official index"
  removedAtBlockNumber: BigInt
}
